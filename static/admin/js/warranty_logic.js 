// Логика управления гарантией и датами
(function() {
    'use strict';
    
    function initWarrantyLogic() {
        console.log('🔧 Инициализация логики гарантии...');
        
        // Определяем пары полей: чекбокс гарантии → поле даты
        const warrantyPairs = [
            { warranty: 'display_warranty', date: 'display_date' },
            { warranty: 'case_warranty', date: 'case_date' },
            { warranty: 'cover_warranty', date: 'cover_date' },
            { warranty: 'general_360_warranty', date: 'general_360_date' },
            { warranty: 'side_warranty', date: 'side_date' },
            { warranty: 'lens_warranty', date: 'lens_date' }
        ];
        
        warrantyPairs.forEach(pair => {
            const warrantyCheckbox = document.querySelector(`input[name="${pair.warranty}"]`);
            const dateInput = document.querySelector(`input[name="${pair.date}"]`);
            
            if (warrantyCheckbox && dateInput) {
                console.log(`✅ Настройка связи: ${pair.warranty} → ${pair.date}`);
                
                // Устанавливаем начальное состояние
                updateDateFieldState(warrantyCheckbox, dateInput);
                
                // Добавляем обработчик изменения
                warrantyCheckbox.addEventListener('change', function() {
                    updateDateFieldState(this, dateInput);
                    
                    if (!this.checked) {
                        console.log(`⚠️ Гарантия "${pair.warranty}" отключена. Поле даты станет readonly при сохранении.`);
                    } else {
                        console.log(`✅ Гарантия "${pair.warranty}" включена. Поле даты активно.`);
                    }
                });
            } else {
                console.warn(`⚠️ Не найдены поля для пары: ${pair.warranty} / ${pair.date}`);
            }
        });
        
        console.log('✅ Логика гарантии инициализирована');
    }
    
    function updateDateFieldState(warrantyCheckbox, dateInput) {
        if (!warrantyCheckbox || !dateInput) return;
        
        const isWarrantyActive = warrantyCheckbox.checked;
        
        if (isWarrantyActive) {
            // Гарантия активна → поле даты доступно для редактирования
            dateInput.disabled = false;
            dateInput.style.opacity = '1';
            dateInput.style.cursor = 'text';
            dateInput.style.backgroundColor = '#ffffff';
            dateInput.style.borderColor = '#ced4da';
        } else {
            // Гарантия неактивна → поле даты отключено
            dateInput.disabled = true;
            dateInput.style.opacity = '0.6';
            dateInput.style.cursor = 'not-allowed';
            dateInput.style.backgroundColor = '#e9ecef';
            dateInput.style.borderColor = '#dee2e6';
        }
    }
    
    // Добавляем визуальные подсказки
    function addTooltips() {
        const warrantyCheckboxes = document.querySelectorAll(
            'input[name$="_warranty"][type="checkbox"]'
        );
        
        warrantyCheckboxes.forEach(checkbox => {
            const label = checkbox.closest('.fieldBox, [class*="field"]')?.querySelector('label');
            if (label) {
                label.title = 'Снимите галочку, когда клиент использует гарантию. Дата использования зафиксируется автоматически.';
                label.style.cursor = 'help';
            }
        });
    }
    
    // Предупреждение перед отключением гарантии
    function addWarrantyWarning() {
        const warrantyCheckboxes = document.querySelectorAll(
            'input[name$="_warranty"][type="checkbox"]'
        );
        
        warrantyCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                if (!this.checked && !this.dataset.warningShown) {
                    // Показываем предупреждение только один раз
                    const partName = this.name.replace('_warranty', '').replace('_', ' ');
                    console.log(`⚠️ Внимание: При сохранении будет зафиксирована дата использования гарантии для "${partName}"`);
                    
                    // Визуальная индикация
                    const row = this.closest('.repair-detail-row, .row');
                    if (row) {
                        row.style.borderLeftColor = '#ffc107';
                        row.style.backgroundColor = '#fff3cd';
                        
                        setTimeout(() => {
                            row.style.borderLeftColor = '#007bff';
                            row.style.backgroundColor = '#f8f9fa';
                        }, 2000);
                    }
                    
                    this.dataset.warningShown = 'true';
                }
            });
        });
    }
    
    // Автозаполнение даты гарантии на 1 год вперёд
    function addAutoDateFill() {
        const mainCheckboxes = document.querySelectorAll(
            'input[name="display"], input[name="case"], input[name="cover"], ' +
            'input[name="general_360"], input[name="side"], input[name="lens"]'
        );
        
        mainCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                if (this.checked) {
                    const fieldName = this.name;
                    const warrantyCheckbox = document.querySelector(`input[name="${fieldName}_warranty"]`);
                    const dateInput = document.querySelector(`input[name="${fieldName}_date"]`);
                    
                    // Если включается основной чекбокс и дата ещё не установлена
                    if (warrantyCheckbox && dateInput && !dateInput.value) {
                        // Автоматически ставим галочку на гарантию
                        warrantyCheckbox.checked = true;
                        warrantyCheckbox.dispatchEvent(new Event('change'));
                        
                        // Устанавливаем дату на 1 год вперёд
                        const today = new Date();
                        const oneYearLater = new Date(today.setFullYear(today.getFullYear() + 1));
                        const formattedDate = oneYearLater.toISOString().split('T')[0];
                        
                        dateInput.value = formattedDate;
                        dateInput.style.borderColor = '#28a745';
                        dateInput.style.boxShadow = '0 0 0 0.2rem rgba(40, 167, 69, 0.25)';
                        
                        setTimeout(() => {
                            dateInput.style.borderColor = '#ced4da';
                            dateInput.style.boxShadow = 'none';
                        }, 1500);
                        
                        console.log(`✅ Автоматически установлена дата гарантии на 1 год для "${fieldName}": ${formattedDate}`);
                    }
                }
            });
        });
    }
    
    // Показ оставшегося времени гарантии
    function showRemainingWarranty() {
        const dateInputs = document.querySelectorAll('input[name$="_date"][type="date"]:not([readonly])');
        
        dateInputs.forEach(input => {
            if (input.value) {
                const warrantyDate = new Date(input.value);
                const today = new Date();
                const diffTime = warrantyDate - today;
                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                
                if (diffDays > 0 && diffDays <= 365) {
                    // Создаём индикатор
                    let indicator = input.nextElementSibling;
                    if (!indicator || !indicator.classList.contains('warranty-indicator')) {
                        indicator = document.createElement('small');
                        indicator.className = 'warranty-indicator';
                        indicator.style.cssText = `
                            display: block;
                            margin-top: 4px;
                            font-size: 11px;
                            font-weight: 500;
                        `;
                        input.insertAdjacentElement('afterend', indicator);
                    }
                    
                    // Цвет в зависимости от оставшихся дней
                    let color = '#28a745'; // Зелёный
                    if (diffDays <= 30) {
                        color = '#dc3545'; // Красный
                    } else if (diffDays <= 90) {
                        color = '#ffc107'; // Жёлтый
                    }
                    
                    indicator.style.color = color;
                    indicator.textContent = `Осталось: ${diffDays} дн.`;
                }
            }
        });
    }
    
    // Запуск всех функций
    function init() {
        console.log('🚀 Запуск системы управления гарантией...');
        
        initWarrantyLogic();
        addTooltips();
        addWarrantyWarning();
        addAutoDateFill();
        showRemainingWarranty();
        
        console.log('✅ Система управления гарантией готова');
    }
    
    // Запуск при загрузке
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        setTimeout(init, 150);
    }
    
    // Переинициализация при изменениях (для динамического контента)
    const observer = new MutationObserver(function(mutations) {
        let shouldReinit = false;
        
        mutations.forEach(function(mutation) {
            mutation.addedNodes.forEach(function(node) {
                if (node.nodeType === 1 && (
                    node.querySelector?.('input[type="checkbox"]') ||
                    node.querySelector?.('input[type="date"]')
                )) {
                    shouldReinit = true;
                }
            });
        });
        
        if (shouldReinit) {
            setTimeout(init, 100);
        }
    });
    
    if (document.body) {
        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    }
    
})();